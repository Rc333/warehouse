import java.util.*;
import java.io.*;
public class Member implements Serializable {
  private static final long serialVersionUID = 1L;
  private String name;
  private String address;
  private String phone;
  private String id;
  private static final String MEMBER_STRING = "M";
  private List booksBorrowed = new LinkedList();
  private List booksOnHold = new LinkedList();
  private List transactions = new LinkedList();   protected Book borrowedBook;  GregorianCalendar dueDate;
   public  Member (String name, String address, String phone) {
    this.name = name;
    this.address = address;
    this.phone = phone;
    id = MEMBER_STRING + (MemberIdServer.instance()).getId();
  }

  public String getName() {
    return name;
  }
  public String getPhone() {
    return phone;
  }
  public String getAddress() {
    return address;
  }
  public String getId() {
    return id;
  }
  public void setName(String newName) {
    name = newName;
  }
  public void setAddress(String newAddress) {
    address = newAddress;
  }
  public void setPhone(String newPhone) {
    phone = newPhone;
  }
  public boolean equals(String id) {
    return this.id.equals(id);
  }
  public String toString() {
    String string = "Member name " + name + " address " + address + " id " + id + " phone " + phone;
    return string;
  }public boolean issue(Book book) {	 borrowedBook =  book;	 dueDate =	 new GregorianCalendar();	 dueDate.setTimeInMillis(System.currentTimeMillis());	 dueDate.add(Calendar.MONTH,1);	 return true;}
public Iterator getTransactions(Calendar date) {
List result = new LinkedList();
for (Iterator iterator = transactions.iterator(); iterator.hasNext(); ) {
System.out.println("test2");
Transaction transaction = (Transaction) iterator.next();
if (transaction.onDate(date)) {
System.out.println("testing");
result.add(transaction);
}
}
return (result.iterator());
}
}
